name: "LeNet"
layer {
  name: "data"
  type: "Input"
  top: "data"
  input_param { shape: { dim: 64 dim: 1 dim: 28 dim: 28 } }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 16
    kernel_size: 5
    stride: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "batchnorm1"
  type: "BatchNorm"
  bottom: "conv1"
  top: "batchnorm1"
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "batchnorm1"
  top: "batchnorm1"
}
layer {
  name: "dropout3"
  type: "Dropout"
  bottom: "batchnorm1"
  top: "batchnorm1"
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "batchnorm1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "batchnorm2"
  type: "BatchNorm"
  bottom: "conv2"
  top: "batchnorm2"
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "batchnorm2"
  top: "batchnorm2"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "batchnorm2"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "dropout2"
  type: "Dropout"
  bottom: "pool1"
  top: "pool1"
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 800
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "batchnorm3"
  type: "BatchNorm"
  bottom: "ip1"
  top: "batchnorm3"
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "batchnorm3"
  top: "batchnorm3"
}
layer {
  name: "dropout3"
  type: "Dropout"
  bottom: "batchnorm3"
  top: "batchnorm3"
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "batchnorm3"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "prob"
  type: "Softmax"
  bottom: "ip1"
  top: "prob"
}
